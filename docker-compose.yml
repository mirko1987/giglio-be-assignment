version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: nestjs-order-system-mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: order_system
      MYSQL_USER: nestjs
      MYSQL_PASSWORD: nestjs123
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - order-system-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # NestJS Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nestjs-order-system-app
    restart: always
    ports:
      - "3000:3000"
      - "5001:5001"  # gRPC port
    environment:
      NODE_ENV: production
      DB_TYPE: mysql
      DB_HOST: mysql
      DB_PORT: 3306
      DB_USERNAME: nestjs
      DB_PASSWORD: nestjs123
      DB_DATABASE: order_system
      DB_SYNCHRONIZE: true
      DB_LOGGING: true
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - order-system-network
    volumes:
      - ./logs:/app/logs

  # phpMyAdmin for database management (optional)
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: nestjs-order-system-phpmyadmin
    restart: always
    ports:
      - "8080:80"
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_USER: nestjs
      PMA_PASSWORD: nestjs123
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - order-system-network

volumes:
  mysql_data:
    driver: local

networks:
  order-system-network:
    driver: bridge