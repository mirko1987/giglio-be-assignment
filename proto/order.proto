syntax = "proto3";

package order;

// Order service definition
service OrderService {
  // Create a new order (main business operation)
  rpc CreateOrder (CreateOrderRequest) returns (OrderResponse);
  
  // Get order by ID
  rpc GetOrder (GetOrderRequest) returns (OrderResponse);
  
  // List orders
  rpc ListOrders (ListOrdersRequest) returns (ListOrdersResponse);
  
  // Update order status
  rpc UpdateOrderStatus (UpdateOrderStatusRequest) returns (OrderResponse);
  
  // Cancel order
  rpc CancelOrder (CancelOrderRequest) returns (OrderResponse);
  
  // Get orders by user
  rpc GetOrdersByUser (GetOrdersByUserRequest) returns (ListOrdersResponse);
}

// Messages
message Order {
  string id = 1;
  string user_id = 2;
  string user_name = 3;
  string user_email = 4;
  repeated OrderItem items = 5;
  string status = 6;
  double total_amount = 7;
  string currency = 8;
  string created_at = 9;
  string updated_at = 10;
}

message OrderItem {
  string product_id = 1;
  string product_name = 2;
  int32 quantity = 3;
  double unit_price = 4;
  double subtotal = 5;
  string currency = 6;
}

message CreateOrderRequest {
  string user_id = 1;
  repeated CreateOrderItem items = 2;
}

message CreateOrderItem {
  string product_id = 1;
  int32 quantity = 2;
  double unit_price = 3;
  string currency = 4;
}

message GetOrderRequest {
  string id = 1;
}

message ListOrdersRequest {
  int32 page = 1;
  int32 limit = 2;
  string user_id = 3;
  string status = 4;
}

message ListOrdersResponse {
  repeated Order orders = 1;
  int32 total = 2;
  int32 page = 3;
  int32 limit = 4;
}

message UpdateOrderStatusRequest {
  string id = 1;
  string status = 2;
}

message CancelOrderRequest {
  string id = 1;
  string reason = 2;
}

message GetOrdersByUserRequest {
  string user_id = 1;
  int32 page = 2;
  int32 limit = 3;
}

message OrderResponse {
  Order order = 1;
}
